Best Time to Buy and Sell Stock
You are given an array of prices, where prices[i] represents the
price of a stock on the i-th day.
Your goal is to maximize your profit by buying the stock on one day
and selling it on a later day. You can only make one buy-and-sell
transaction.
Return the maximum profit you can achieve. If no profit is possible,
return 0.

Example 1:
Input: prices = [2, 4, 1, 7, 5, 8]
Output: 7
Explanation:
Buy on day 3 (price = 1) and sell on day 6 (price = 8).
Profit = 8 - 1 = 7.

CODING 

import java.util.Scanner;

public class BestTimeToBuyAndSellStock {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] prices = new int[n];
        for (int i = 0; i < n; i++) {
            prices[i] = sc.nextInt();
        }
        int minPrice = prices[0];
        int maxProfit = 0;

        for (int i = 1; i < n; i++) {
            if (prices[i] < minPrice) {
                minPrice = prices[i];
            } else {
                int profit = prices[i] - minPrice;
                if (profit > maxProfit) {
                    maxProfit = profit;
                }
            }
        }
        System.out.println(maxProfit);
    }
}
